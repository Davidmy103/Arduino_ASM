
Software_RGBRing_C.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000a  00800100  00000178  000001ec  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000178  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000001f6  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000228  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  00000268  2**3
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000095b  00000000  00000000  00000288  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000882  00000000  00000000  00000be3  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002e6  00000000  00000000  00001465  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000318  00000000  00000000  0000174b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__ctors_end>
   4:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
   8:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
   c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  10:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  14:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  18:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  1c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  20:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  24:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  28:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  2c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  30:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  34:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  38:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  3c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  40:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  44:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  48:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  4c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  50:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  54:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  58:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  5c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  60:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  64:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  68:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  6c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  70:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  74:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  78:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  7c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  80:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  84:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  88:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  8c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  90:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  94:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  98:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  9c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a0:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a4:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a8:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  ac:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  b0:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>

000000b4 <__ctors_end>:
  b4:	11 24       	eor	r1, r1
  b6:	1f be       	out	0x3f, r1	; 63
  b8:	cf ef       	ldi	r28, 0xFF	; 255
  ba:	d8 e0       	ldi	r29, 0x08	; 8
  bc:	de bf       	out	0x3e, r29	; 62
  be:	cd bf       	out	0x3d, r28	; 61

000000c0 <__do_copy_data>:
  c0:	11 e0       	ldi	r17, 0x01	; 1
  c2:	a0 e0       	ldi	r26, 0x00	; 0
  c4:	b1 e0       	ldi	r27, 0x01	; 1
  c6:	e8 e7       	ldi	r30, 0x78	; 120
  c8:	f1 e0       	ldi	r31, 0x01	; 1
  ca:	02 c0       	rjmp	.+4      	; 0xd0 <__do_copy_data+0x10>
  cc:	05 90       	lpm	r0, Z+
  ce:	0d 92       	st	X+, r0
  d0:	aa 30       	cpi	r26, 0x0A	; 10
  d2:	b1 07       	cpc	r27, r17
  d4:	d9 f7       	brne	.-10     	; 0xcc <__do_copy_data+0xc>

000000d6 <__do_clear_bss>:
  d6:	21 e0       	ldi	r18, 0x01	; 1
  d8:	aa e0       	ldi	r26, 0x0A	; 10
  da:	b1 e0       	ldi	r27, 0x01	; 1
  dc:	01 c0       	rjmp	.+2      	; 0xe0 <.do_clear_bss_start>

000000de <.do_clear_bss_loop>:
  de:	1d 92       	st	X+, r1

000000e0 <.do_clear_bss_start>:
  e0:	aa 30       	cpi	r26, 0x0A	; 10
  e2:	b2 07       	cpc	r27, r18
  e4:	e1 f7       	brne	.-8      	; 0xde <.do_clear_bss_loop>
  e6:	0e 94 a6 00 	call	0x14c	; 0x14c <main>
  ea:	0c 94 ba 00 	jmp	0x174	; 0x174 <_exit>

000000ee <__bad_interrupt>:
  ee:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000f2 <rgb_funkcija>:
 .extern rgb_niz
 .type rgb_funkcija, @function
	
rgb_funkcija:					;out 0x0B, r23		sbi
								;nop
	ldi ZL, lo8(rgb_niz)		;nop		
  f2:	e0 e0       	ldi	r30, 0x00	; 0
	ldi ZH, hi8(rgb_niz)		;nop
  f4:	f1 e0       	ldi	r31, 0x01	; 1
	ldi r22, 0x00				;out 0x0B, r22		cbi
  f6:	60 e0       	ldi	r22, 0x00	; 0
	ldi r23, 4					;nop
  f8:	74 e0       	ldi	r23, 0x04	; 4
	ldi r24, 24					;nop
  fa:	88 e1       	ldi	r24, 0x18	; 24
	ld r20, Z+					;nop
  fc:	41 91       	ld	r20, Z+

000000fe <provera>:
								;nop
								;nop
								;nop
								;nop
provera:						;nop
	ldi r28, 8
  fe:	c8 e0       	ldi	r28, 0x08	; 8

00000100 <provera_1>:
provera_1:
	rol r20
 100:	44 1f       	adc	r20, r20
	brcs logic_1
 102:	78 f0       	brcs	.+30     	; 0x122 <logic_1>

00000104 <logic_0>:
logic_0:
	out 0x05, r23
 104:	75 b9       	out	0x05, r23	; 5
	dec r24
 106:	8a 95       	dec	r24
	breq kraj
 108:	01 f1       	breq	.+64     	; 0x14a <kraj>
	nop
 10a:	00 00       	nop
	out 0x05, r22
 10c:	65 b9       	out	0x05, r22	; 5
	dec r28
 10e:	ca 95       	dec	r28
	breq bb
 110:	b1 f0       	breq	.+44     	; 0x13e <bb>
	...
	nop
	nop
	nop
	nop
	rol r20
 11a:	44 1f       	adc	r20, r20
	brcs logic_1_1
 11c:	08 f0       	brcs	.+2      	; 0x120 <logic_1_1>
	rjmp logic_0
 11e:	f2 cf       	rjmp	.-28     	; 0x104 <logic_0>

00000120 <logic_1_1>:
	...

00000122 <logic_1>:
								
								
logic_1_1:
	nop
logic_1:
	out 0x05, r23
 122:	75 b9       	out	0x05, r23	; 5
	dec r24
 124:	8a 95       	dec	r24
	breq kraj
 126:	89 f0       	breq	.+34     	; 0x14a <kraj>
	dec r28
 128:	ca 95       	dec	r28
	breq aa
 12a:	59 f0       	breq	.+22     	; 0x142 <aa>
	nop
 12c:	00 00       	nop
	nop
 12e:	00 00       	nop
	nop
 130:	00 00       	nop
	out 0x05, r22								
 132:	65 b9       	out	0x05, r22	; 5
	nop
 134:	00 00       	nop
	nop							
 136:	00 00       	nop
	rol r20
 138:	44 1f       	adc	r20, r20
	brcs logic_1_1
 13a:	90 f3       	brcs	.-28     	; 0x120 <logic_1_1>
	rjmp logic_0							
 13c:	e3 cf       	rjmp	.-58     	; 0x104 <logic_0>

0000013e <bb>:
								
bb:
	ld r20, Z+
 13e:	41 91       	ld	r20, Z+
	rjmp provera
 140:	de cf       	rjmp	.-68     	; 0xfe <provera>

00000142 <aa>:

									
			
aa:
	 nop
 142:	00 00       	nop
  	 ld r20, Z+
 144:	41 91       	ld	r20, Z+
	 out 0x0B, r22
 146:	6b b9       	out	0x0b, r22	; 11
	 rjmp provera
 148:	da cf       	rjmp	.-76     	; 0xfe <provera>

0000014a <kraj>:
	

	
kraj:
ret
 14a:	08 95       	ret

0000014c <main>:
 14c:	8f ef       	ldi	r24, 0xFF	; 255
 14e:	8a b9       	out	0x0a, r24	; 10
 150:	84 b9       	out	0x04, r24	; 4
 152:	8b b9       	out	0x0b, r24	; 11
 154:	69 e0       	ldi	r22, 0x09	; 9
 156:	70 e0       	ldi	r23, 0x00	; 0
 158:	80 e0       	ldi	r24, 0x00	; 0
 15a:	91 e0       	ldi	r25, 0x01	; 1
 15c:	0e 94 79 00 	call	0xf2	; 0xf2 <rgb_funkcija>
 160:	2f e7       	ldi	r18, 0x7F	; 127
 162:	86 e9       	ldi	r24, 0x96	; 150
 164:	98 e9       	ldi	r25, 0x98	; 152
 166:	21 50       	subi	r18, 0x01	; 1
 168:	80 40       	sbci	r24, 0x00	; 0
 16a:	90 40       	sbci	r25, 0x00	; 0
 16c:	e1 f7       	brne	.-8      	; 0x166 <main+0x1a>
 16e:	00 c0       	rjmp	.+0      	; 0x170 <main+0x24>
 170:	00 00       	nop
 172:	f0 cf       	rjmp	.-32     	; 0x154 <main+0x8>

00000174 <_exit>:
 174:	f8 94       	cli

00000176 <__stop_program>:
 176:	ff cf       	rjmp	.-2      	; 0x176 <__stop_program>
